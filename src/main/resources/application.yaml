server:
  port: 8080

spring:
  main.banner-mode: 'off'
  profiles:
    active: default
  flyway:
    enabled: true
  datasource:
    url: "${DATABASE_JDBC_URL}&reWriteBatchedInserts=true"
    hikari:
      minimum-idle: 1
      maximum-pool-size: 30
  data:
    redis:
      ssl.enabled: true
      username: ${VALKEY_USERNAME_SESSIONS}
      password: ${VALKEY_PASSWORD_SESSIONS}
      host: ${VALKEY_HOST_SESSIONS}
      port: ${VALKEY_PORT_SESSIONS}
  cache:
    redis:
      time-to-live: 1h

aiven-kafka:
  auto-offset-reset: none


management:
  endpoint.prometheus.enabled: true
  endpoints.web:
    base-path: /internal
    exposure.include: health,prometheus
  health.redis.enabled: false # Skru av redis helsesjekk ettersom valkey ikke gir tilgang til "info" endepunktet

logging.config: "classpath:logback.xml"
nais.cluster: ${NAIS_CLUSTER_NAME}

no.nav.security.jwt:
  issuer:
    tokenx:
      discoveryurl: ${TOKEN_X_WELL_KNOWN_URL}
      accepted_audience: ${TOKEN_X_CLIENT_ID}
  client:
    registration:
      pdl-api-client-credentials:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: api://${PDL_API_AAD_CLIENT_ID}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      aareg-client-credentials:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: api://${AAREG_AAD_CLIENT_ID}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      flex-syketilfelle-tokenx:
        token-endpoint-url: ${TOKEN_X_TOKEN_ENDPOINT}
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        authentication:
          client-id: ${TOKEN_X_CLIENT_ID}
          client-jwk: ${TOKEN_X_PRIVATE_JWK}
          client-auth-method: private_key_jwt
        token-exchange:
          audience: ${FLEX_SYKETILFELLE_TOKENX_CLIENT_ID}

pdl.api.url: ${PDL_BASE_URL}
elector.get_url: ${ELECTOR_GET_URL}